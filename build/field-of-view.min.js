!function(e){"use strict";function t(e){if(Array.isArray(e)&&"number"==typeof e[0]&&"number"==typeof e[1])return e;if(e){if("Feature"===e.type&&e.geometry&&"Point"===e.geometry.type&&Array.isArray(e.geometry.coordinates))return e.geometry.coordinates;if("Point"===e.type&&Array.isArray(e.coordinates))return e.coordinates}throw new Error("A coordinate, feature, or point geometry is required")}function r(e,t,r){if(!t||!r)throw new Error("type and name required");if(!e||e.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.type)}function o(e,t,r){if(!r)throw new Error(".featureOf() requires a name");if(!e||"Feature"!==e.type||!e.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!e.geometry||e.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+e.geometry.type)}function n(e,t,r){if(!r)throw new Error(".collectionOf() requires a name");if(!e||"FeatureCollection"!==e.type)throw new Error("Invalid input to "+r+", FeatureCollection required");for(var o=0;o<e.features.length;o++){var n=e.features[o];if(!n||"Feature"!==n.type||!n.geometry)throw new Error("Invalid input to "+r+", Feature with geometry required");if(!n.geometry||n.geometry.type!==t)throw new Error("Invalid input to "+r+": must be a "+t+", given "+n.geometry.type)}}function i(e,t){return{type:"Feature",properties:t||{},geometry:e}}function a(e,t,r){var o,n,i,s,u,c,y,l,g,f,p=0,h="FeatureCollection"===e.type,m="Feature"===e.type,d=h?e.features.length:1;for(o=0;o<d;o++)for(g=h?e.features[o].geometry:m?e.geometry:e,f="GeometryCollection"===g.type,y=f?g.geometries.length:1,s=0;s<y;s++)if(c=f?g.geometries[s]:g,l=c.coordinates,p=!r||"Polygon"!==c.type&&"MultiPolygon"!==c.type?0:1,"Point"===c.type)t(l);else if("LineString"===c.type||"MultiPoint"===c.type)for(n=0;n<l.length;n++)t(l[n]);else if("Polygon"===c.type||"MultiLineString"===c.type)for(n=0;n<l.length;n++)for(i=0;i<l[n].length-p;i++)t(l[n][i]);else if("MultiPolygon"===c.type)for(n=0;n<l.length;n++)for(i=0;i<l[n].length;i++)for(u=0;u<l[n][i].length-p;u++)t(l[n][i][u]);else{if("GeometryCollection"!==c.type)throw new Error("Unknown Geometry Type");for(n=0;n<c.geometries.length;n++)a(c.geometries[n],t,r)}}function s(e,t,r,o){return a(e,function(e){r=t(r,e)},o),r}function u(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties,r);break;case"Feature":t(e.properties,0)}}function c(e,t,r){return u(e,function(e,o){r=t(r,e,o)}),r}function y(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r],r)}function l(e){var t=[];return a(e,function(e){t.push(e)}),t}function g(e,t){var r,o,n,i,a,s,u,c="FeatureCollection"===e.type,y="Feature"===e.type,l=c?e.features.length:1;for(r=0;r<l;r++)for(s=c?e.features[r].geometry:y?e.geometry:e,u="GeometryCollection"===s.type,a=u?s.geometries.length:1,n=0;n<a;n++)if(i=u?s.geometries[n]:s,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)t(i);else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(o=0;o<i.geometries.length;o++)t(i.geometries[o])}}function f(e){var t=e*Math.PI/180;return Math.tan(t)}function p(e){var t=e*Math.PI/180;return Math.cos(t)}function h(e,t){var r=e.properties;return t.nested&&(r=r[t.nested]?r[t.nested]:{}),r}function m(e,t){var r=h(e,t),o=r.angle||t.angle,n=e.geometry.type;if(void 0===o)throw new Error("feature must include angle property, or global angle option must be set");if("LineString"===n){if(2===e.geometry.coordinates.length)return e;throw new Error("only accepts only accepts LineStrings with two points")}if("GeometryCollection"===n){if(2===e.geometry.geometries.length&&"Point"===e.geometry.geometries[0].type&&"Point"===e.geometry.geometries[1].type)return e;throw new Error("only accepts GeometryCollections containing two Points")}if("Point"===n){if(void 0!==r.bearing&&void 0!==r.distance)return e;throw new Error("only accepts single Points with distance and bearing properties")}throw new Error("only accepts LineStrings with two points, GeometryCollections \ncontaining two Points, or single Points with distance and bearing properties")}function d(e,t){var r=e.geometry.type;return"Point"===r?w(e,t):"LineString"===r?M(e,t):"GeometryCollection"===r?v(e,t):void 0}function w(e,t){var r=h(e,t),o=r.distance,n=r.angle||t.angle,i=J(e,o,r.bearing,ue),a=f(n/2)*o,s=[J(i,a,r.bearing+90,ue),J(i,-a,r.bearing+90,ue)];return{type:"Feature",properties:e.properties,geometry:{type:"GeometryCollection",geometries:[e.geometry,{type:"LineString",coordinates:[s[0].geometry.coordinates,s[1].geometry.coordinates]}]}}}function M(e,t){var r=h(e,t),o=r.angle||t.angle,n=re(e),i=e.geometry.coordinates.map(function(e){return{type:"Feature",geometry:{type:"Point",coordinates:e}}}),a=se(i[0],n,ue),s=ne(i[0],i[1]),u=a/f(o/2),c=J(n,u,s+90,ue);return{type:"Feature",properties:e.properties,geometry:{type:"GeometryCollection",geometries:[c.geometry,e.geometry]}}}function v(e,t){var r=h(e,t),o=r.angle||t.angle,n=e.geometry.geometries[0],i=e.geometry.geometries[1],a=se(n,i,ue),s=ne(n,i),u=a/p(o/2),c=J(n,u,s+o/2,ue),y=J(n,u,s-o/2,ue);return{type:"Feature",properties:Object.assign(e.properties,{bearing:s,distance:a}),geometry:{type:"GeometryCollection",geometries:[n,{type:"LineString",coordinates:[c.geometry.coordinates,y.geometry.coordinates]}]}}}function P(e,t){return t=t||{},e=m(e,t),d(e,t)}var E=r,C=n,F=o,b=t,I={geojsonType:E,collectionOf:C,featureOf:F,getCoord:b},G=i,L=function(e,t){if(!Array.isArray(e))throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");return i({type:"Point",coordinates:e.slice()},t)},S=function(e,t){if(!e)throw new Error("No coordinates passed");for(var r=0;r<e.length;r++){var o=e[r];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<o[o.length-1].length;n++)if(o[o.length-1][n]!==o[0][n])throw new Error("First and last Position are not equivalent.")}return i({type:"Polygon",coordinates:e},t)},q=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"LineString",coordinates:e},t)},A=function(e){return{type:"FeatureCollection",features:e}},k=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"MultiLineString",coordinates:e},t)},T=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"MultiPoint",coordinates:e},t)},O=function(e,t){if(!e)throw new Error("No coordinates passed");return i({type:"MultiPolygon",coordinates:e},t)},N=function(e,t){return i({type:"GeometryCollection",geometries:e},t)},R={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373,feet:20908792.65},D=function(e,t){var r=R[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e*r},j=function(e,t){var r=R[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r},U=function(e,t){var r=R[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r*57.2958},V={feature:G,point:L,polygon:S,lineString:q,featureCollection:A,multiLineString:k,multiPoint:T,multiPolygon:O,geometryCollection:N,radiansToDistance:D,distanceToRadians:j,distanceToDegrees:U},x=I.getCoord,z=V,B=z.point,H=z.distanceToRadians,J=function(e,t,r,o){var n=Math.PI/180,i=180/Math.PI,a=x(e),s=n*a[0],u=n*a[1],c=n*r,y=H(t,o),l=Math.asin(Math.sin(u)*Math.cos(y)+Math.cos(u)*Math.sin(y)*Math.cos(c)),g=s+Math.atan2(Math.sin(c)*Math.sin(y)*Math.cos(u),Math.cos(y)-Math.sin(u)*Math.sin(l));return B([i*g,i*l])},K=a,Q=s,W=u,X=c,Y=y,Z=l,$=g,_={coordEach:K,coordReduce:Q,propEach:W,propReduce:X,featureEach:Y,coordAll:Z,geomEach:$},ee=_.coordEach,te=V.point,re=function(e){var t=0,r=0,o=0;return ee(e,function(e){t+=e[0],r+=e[1],o++},!0),te([t/o,r/o])},oe=I.getCoord,ne=function(e,t){var r=Math.PI/180,o=180/Math.PI,n=oe(e),i=oe(t),a=r*n[0],s=r*i[0],u=r*n[1],c=r*i[1],y=Math.sin(s-a)*Math.cos(c),l=Math.cos(u)*Math.sin(c)-Math.sin(u)*Math.cos(c)*Math.cos(s-a),g=o*Math.atan2(y,l);return g},ie=I.getCoord,ae=V.radiansToDistance,se=function(e,t,r){var o=Math.PI/180,n=ie(e),i=ie(t),a=o*(i[1]-n[1]),s=o*(i[0]-n[0]),u=o*n[1],c=o*i[1],y=Math.pow(Math.sin(a/2),2)+Math.pow(Math.sin(s/2),2)*Math.cos(u)*Math.cos(c);return ae(2*Math.atan2(Math.sqrt(y),Math.sqrt(1-y)),r)},ue="meters";e.fromFeature=P}(this.fieldOfView=this.fieldOfView||{});
